{"version":3,"sources":["components/AppBar/Mobile.jsx","reducer/index.js","GlobalContext.js","components/AppBar/Desktop.jsx","constant.jsx","components/UploadPortal.jsx","components/ResultPortal.jsx","pages/HomePage.jsx","theme.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","textAlign","title","fontFamily","fontSize","lineHeight","textTransform","borderBottom","color","palette","secondary","main","primary","navlinkdiv","navlinks","textDecoration","props","classes","Container","className","Button","reducer","state","action","type","showLoader","payload","console","log","imageAvailable","imageUrl","url","id","resultAvailable","result","initialState","showMetadata","isMobile","a","check","navigator","userAgent","vendor","window","opera","test","substr","normal","prob","percent","penumonic","answer","GlobalContext","React","createContext","GlobalContextProvider","useReducer","dispatch","Provider","value","children","flexGrow","marginLeft","fontWeight","navlink","marginRight","MenuAppBar","useContext","AppBar","position","elevation","Toolbar","component","href","BASE_URL","height","display","preview","flexDirection","alignItems","justifyContent","width","padding","filter","metadata","metadataText","input","style","useState","file","setFile","ctx","src","CircularProgress","size","variant","onClick","document","getElementById","click","onChange","e","fileName","target","files","formData","FormData","append","Axios","post","headers","then","res","turl","URL","createObjectURL","data","response","catch","alert","Fragment","name","other","info","resultSlogan","Grid","container","direction","justify","item","xs","TableContainer","Paper","Table","table","aria-label","TableHead","TableRow","TableCell","align","TableBody","scope","pneumonic","maxWidth","CssBaseline","minHeight","Typography","upload","border","feedback","form","feature","fclass","email","review","fdata","setFdata","handleInputChange","Hidden","only","Mobile","sm","UploadPortal","ResultPortal","md","TextField","label","fullWidth","required","FormLabel","FormControlLabel","control","Radio","checked","labelPlacement","multiline","rows","error","createMuiTheme","typography","join","App","ThemeProvider","path","exact","HomePage","Boolean","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ad9eda73.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container, makeStyles, Button } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop:theme.spacing(2),\n        textAlign: \"center\",\n    },\n    title: {\n        fontFamily: \"Fredoka one\",\n        fontSize: \"1.8rem\",\n        lineHeight: \"1.2\",\n        textTransform: \"Capitalize\",\n        borderBottom :\"4px solid grey\",\n\n        \"& span:first-child\": {\n            color: theme.palette.secondary.main,\n            //textDecoration: \"underline\",\n        },\n        \"& span:nth-child(2)\": {\n            color: theme.palette.primary.main,\n            //textDecoration: \"underline\",\n        }\n    },\n    navlinkdiv:{\n        marginTop:theme.spacing(3)\n    },\n    navlinks: {\n        textTransform: \"Capitalize\",\n        color: theme.palette.primary.main,\n        textDecoration: \"underline\",\n        fontFamily: \"Nunito\",\n        fontSize: \"1rem\"\n    }\n}))\nexport default (props) => {\n    const classes = useStyles();\n    return (<div>\n        <Container className={classes.root}>\n            <span className={classes.title}>\n                <span>Pneumonia</span>\n                <span> Detection </span>\n            </span>\n\n            <div className={classes.navlinkdiv}>\n                <Button className={classes.navlinks}> Resources</Button>\n                <Button className={classes.navlinks}> Documentation </Button>\n                <Button className={classes.navlinks}> GitHub</Button> <br />\n\n                <Button className={classes.navlinks}> Metrics </Button>\n                <Button className={classes.navlinks}>Apis</Button>\n                <Button className={classes.navlinks}>Feedback</Button>\n            </div>\n        </Container>\n    </div>\n    )\n}","let reducer = (state, action) => {\n    switch(action.type) {\n        case \"LOADER\":\n            return {...state, showLoader:action.payload}\n        case \"UPLOADED\":\n            console.log(action.payload)\n            return {...state, imageAvailable:true, imageUrl:action.payload.url, id:action.payload.id}\n        case \"RESULT\":\n            return {...state, resultAvailable:true, result:action.payload}\n        default:\n            return ;\n    }\n}\n\nexport default reducer ;","import React from \"react\";\nimport reducer from \"./reducer\";\n\nconst isMobile = function () {\n    var check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true;\n    })(navigator.userAgent || navigator.vendor || window.opera);\n    return check;\n};\n\nconst initialState = {\n    imageAvailable: false,\n    showLoader: false,\n    resultAvailable: false,\n    showMetadata: true,\n    isMobile: isMobile(),\n    result:{\n        normal:{\n            prob:\"0.9\",\n            percent:\"89%\"\n        },\n        penumonic:{\n            prob:\"0.7\",\n            percent:\"75%\"\n        },\n        answer:\"Pneumonic\"\n    }\n};\n\n\nconst GlobalContext = React.createContext({});\n\nconst GlobalContextProvider = props => {\n    const [state, dispatch] = React.useReducer(reducer, initialState);\n    return <GlobalContext.Provider value={{ state, dispatch }}>\n        {props.children}\n    </GlobalContext.Provider>\n}\n\nexport {\n    GlobalContext,\n    GlobalContextProvider\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GlobalContext } from \"../../GlobalContext\";\nimport { AppBar, Badge, Box, Button, IconButton, Menu, MenuItem, Toolbar, Typography } from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(2),\n        flexGrow: 1,\n    },\n    title: {\n        marginLeft: theme.spacing(8),\n        flexGrow: 1,\n        fontWeight: \"bolder\",\n        fontFamily: \"Nunito\",\n        fontSize: \"1.6vw\",\n        color: theme.palette.secondary.main,\n        textDecoration: \"underline\",\n        '& span': {\n            color: theme.palette.primary.main,\n        }\n    },\n    navlink: {\n        marginRight: theme.spacing(8),\n        textDecoration: \"underline\",\n        fontWeight: \"bold\",\n        fontFamily: \"Nunito\",\n        textTransform: \"Capitalize\",\n        fontSize: \"1.6vw\",\n        color: theme.palette.primary.main\n    },\n}));\n\nexport default function MenuAppBar(props) {\n    const ctx = React.useContext(GlobalContext);\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar color={\"inherit\"} position={\"static\"} elevation={0}>\n                <Toolbar>\n                    <span className={classes.title}>\n                        Pneumonia  <br />  <span> Detection using Ai </span>\n                    </span>\n\n                    <Button component={'a'} href={\"https://pneumonia-detection-using-cnn.herokuapps.com/static/docs.pdf\"} className={classes.navlink}>\n                        Documentation\n                    </Button>\n                    <Button component={'a'} href={\"#resources\"} className={classes.navlink}>\n                        Feedback \n                    </Button>\n                    <Button component={'a'} href={\"\"} className={classes.navlink}>\n                        Metrics\n                    </Button>\n                    <Button component={'a'} href={\"https://github.com/bellrd/pneumonia-detection-using-cnn.git/\"} className={classes.navlink}>\n                        Github\n                    </Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}","export const  BASE_URL= \"https://pneumonia-detection-using-cnn.herokuapp.com\"\n//export const  BASE_URL= \"http://localhost:5000\"","import React, { useContext, useState } from \"react\";\nimport { Box, Button, Grid, makeStyles, CircularProgress } from \"@material-ui/core\";\nimport { GlobalContext } from \"../GlobalContext\";\nimport Axios from \"axios\"\nimport {BASE_URL} from \"../constant\"\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: \"100%\",\n        display: \"flex\",\n        //backgroundColor:\"#463167\",\n\n    },\n    preview: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"space-evenly\",\n        fontFamily:\"Nunito\",\n        textDecoration:\"underline \",\n        // height:\"100%\",\n        width: \"50%\",\n        padding: theme.spacing(2),\n        '& img': {\n            filter: \"brightness(50%)\",\n        }\n    },\n    metadata: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"flex-start\",\n        justifyContent: \"space-evenly\",\n        height: \"100%\",\n        width: \"50%\",\n        padding: theme.spacing(2),\n        '& button': {\n            width: \"50%\",\n            height: \"40px\",\n            fontFamily: \"Alegreya\",\n            fontWeight: \"bold\",\n            '@media screen and (max-width:600px)': {\n                width: \"90%\"\n            }\n        }\n    },\n\n    metadataText: {\n        fontFamily: \"Nunito\",\n        textDecoration: \"underline\"\n    },\n\n    input: {\n        style: \"none\",\n        width: \"100%\",\n        height: \"100%\"\n    }\n\n}))\n\nexport default (props) => {\n    const [file, setFile] = React.useState(null)\n    const onFileInput = (e, fileName) => {\n        let file = e.target.files[0]\n        setFile(file)\n        ctx.dispatch({\n            type: \"LOADER\",\n            payload: true\n        })\n        const formData = new FormData()\n        formData.append(\"file\", file)\n        Axios.post(`${BASE_URL}/api/upload`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }).then((res) => {\n            console.log(\"UPloaded\")\n            ctx.dispatch({\n                type: \"LOADER\",\n                payload: false\n            })\n            let turl = window.URL.createObjectURL(file)\n            console.log({turl})\n            ctx.dispatch({\n                type: \"UPLOADED\",\n                payload: {\n                    url:turl,\n                    id:res.data.id\n                }\n            })\n\n            Axios.post(`${BASE_URL}/api/predict`, {\n                id:res.data.id\n            }).then((response) => {\n                console.log(response.data)\n                ctx.dispatch({\n                    type:\"RESULT\",\n                    payload: response.data\n                })\n            }).catch((e) => {\n                alert(\"Network error\")\n             })\n\n        }).catch(e  => { \n            alert(\"Network error\")\n        })\n\n        //axios request on success\n        // setShowloader false\n        // imageAvailable true\n        // imageUrl set\n        // call action function\n        // on error\n        // imageavail - false\n        // loader - false\n        // img url - \"\"\n    }\n    const classes = useStyles();\n    const ctx = useContext(GlobalContext)\n    return (\n        <div className={classes.root}>\n            <div className={classes.preview}>\n                {\n                    ctx.state.imageAvailable ? (\n                        <img src={ctx.state.imageUrl} width={\"100%\"} height={\"80%\"} />\n                    ) : (\n                            ctx.state.showLoader ? (<>\n                                <CircularProgress size={20} color=\"secondary\" />\n                            </>) : (\n                                    <p> No image yet </p>\n                                )\n                        )\n                }\n            </div>\n            <div className={classes.metadata}>\n                <button variant={\"contained\"} elevation={0} onClick={() => {\n                    document.getElementById(\"file\").click()\n                }}>\n                    Select File\n                        <input type=\"file\" id=\"file\" style={{ display: \"none\" }} onChange={onFileInput} />\n                </button>\n                <div className={classes.metadataText}>\n                    {ctx.state.imageAvailable ? (\n                        <React.Fragment>\n                            <span> File Size: {file.size} </span> <br />\n                            <span> Name: {file.name} </span> <br />\n                            <span> Type: {file.type} </span>\n                        </React.Fragment>\n                    ) : (\n                            <React.Fragment>\n                                <span> Upload only x-ray image of Lung. </span> <br />\n                                <span> Max file size is 16 Megabytes.</span> <br />\n                            </React.Fragment>\n                        )}\n                </div>\n            </div>\n        </div >\n    );\n}","import React from \"react\";\nimport {\n    Container, Grid, Hidden,\n    Paper, makeStyles, TableBody,\n    TableCell, TableContainer,\n    TableRow, TableHead, Table,\n    CssBaseline, Typography\n} from \"@material-ui/core\";\nimport { GlobalContext } from \"../GlobalContext\"\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        padding: theme.spacing(4)\n    },\n    other: {\n        marginTop: theme.spacing(8)\n    },\n    type: {\n        textAlign: \"center\",\n        textDecoration: \"dotted underline\",\n    },\n    info: {\n        textAlign: \"center\",\n        textDecoration: \"underline\"\n    },\n    resultSlogan:{\n        fontFamily:\"Nunito\",\n        textDecoration:\"underline\"\n    }\n}))\nexport default (props) => {\n    const classes = useStyles();\n    const ctx = React.useContext(GlobalContext)\n\n    if (!(ctx.state.resultAvailable)) {\n        return (\n            <div>\n                <Container maxWidth={\"sm\"}>\n                    <CssBaseline>\n                        <Grid container spacing={0} direction={\"column\"} alignItems={\"center\"} justify={\"center\"}\n                            style={{ minHeight: '100vh' }}>\n                            <Grid item xs={12}>\n                                <Typography variant={\"h5\"} className={classes.resultSlogan}> Result will appear here !</Typography>\n                            </Grid>\n                        </Grid>\n                    </CssBaseline>\n                </Container>\n            </div>\n        )\n    }\n\n    return (\n        <Grid\n            container\n            direction=\"column\"\n            justify=\"flex-end\"\n            alignItems=\"stretch\"\n            className={classes.main}\n        >\n            <Grid item className={classes.type} xs={12}>\n                <h2> {ctx.state.result.answer} </h2>\n            </Grid>\n            <Grid item xs={12} className={classes.other}>\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell><b> Label </b></TableCell>\n                                <TableCell align=\"right\"> <b> Probability </b></TableCell>\n                                <TableCell align=\"right\"> <b> Percentage </b></TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    <b> Normal</b>\n                                </TableCell>\n                                <TableCell align=\"right\">{ctx.state.result.normal.prob}</TableCell>\n                                <TableCell align=\"right\">{ctx.state.result.normal.percent} </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    <b> Pneumonic </b>\n                                </TableCell>\n                                <TableCell align=\"right\">{ctx.state.result.pneumonic.prob}</TableCell>\n                                <TableCell align=\"right\">{ctx.state.result.pneumonic.percent}</TableCell>\n                            </TableRow>\n\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Grid>\n            <Grid item className={classes.info}>\n                <h4> Please provide feedback about the result.</h4>\n            </Grid>\n        </Grid>\n    )\n}","import React from 'react';\nimport MobileAppBar from \"../components/AppBar/Mobile\"\nimport DesktopAppBar from \"../components/AppBar/Desktop\"\nimport { Grid, FormControlLabel, FormLabel, Radio, RadioGroup, TextField, Button, Container, Paper, Box, makeStyles, CssBaseline, Hidden, FormControl } from '@material-ui/core';\nimport UploadPortal from \"../components/UploadPortal\";\nimport ResultPortal from \"../components/ResultPortal\";\nimport Axios from \"axios\"\nimport { BASE_URL } from \"../constant\"\nimport { GlobalContext } from '../GlobalContext';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(8),\n        '@media screen and (max-width:600px)': {\n            marginTop: theme.spacing(5)\n        },\n        \"& li\": {\n            fontFamily: \"Alegreya\",\n            fontSize: \"16px\"\n        }\n    },\n    upload: {\n        height: \"400px\",\n        //border: \"4px solid grey\",\n        '@media screen and (max-width:600px)': {\n            height: \"200px\",\n            border: \"2px dashed grey\"\n        }\n    },\n    result: {\n        height: \"400px\",\n        //border: \"4px solid grey\"\n    },\n\n    feedback: {\n        marginTop: theme.spacing(4),\n    },\n    form: {\n        padding: theme.spacing(4),\n\n    },\n    feature: {\n        padding: theme.spacing(4),\n        fontFamily: \"Alegreya\",\n        \"& h1\": {\n        }\n    },\n    fclass: {\n        marginLeft: theme.spacing(1),\n        marginTop: theme.spacing(4),\n        fontSize: \"2vw\",\n        fontFamily: \"Nunito\",\n        color: \"#663399\",\n        textDecoration: \"underline\",\n        \"& span\": {\n            color: \"#fb8400\"\n        }\n    }\n}))\n\n\nexport default props => {\n    const classes = useStyles();\n    const ctx = React.useContext(GlobalContext)\n    const [fdata, setFdata] = React.useState({ email: \"\", review: \"\", result: \"not sure\" })\n    const handleInputChange = e => {\n        if (e.target.name === \"email\") {\n            setFdata({ ...fdata, email: e.target.value });\n        } else if (e.target.name === \"review\") {\n            setFdata({ ...fdata, review: e.target.value });\n        } else if (e.target.name === \"result\") {\n            setFdata({ ...fdata, result: e.target.value })\n        }\n        else {\n            console.log(\"wtf level 101\")\n        }\n    }\n\n    const handleSubmit = e => {\n        Axios.post(BASE_URL + \"/api/feedback\", {\n            ...fdata,\n            id: ctx.state.id\n        })\n            .then(function (response) {\n                alert(\"Thanx for your feedback !\")\n            })\n            .catch(function (error) {\n                alert(\"Something went wrong\");\n            });\n    }\n\n    return (\n        <React.Fragment>\n            <Hidden only={['lg', 'md']}>\n                <MobileAppBar />\n            </Hidden>\n            <Hidden only={['xs', 'sm']}>\n                <DesktopAppBar />\n            </Hidden>\n            <Container className={classes.root}>\n                <Grid container justify={\"space-between\"} spacing={4}>\n                    <Grid item xs={12} sm={6} >\n                        <Paper className={classes.upload} elevation={3} >\n                            <UploadPortal />\n                        </Paper>\n\n                    </Grid>\n                    <Grid item xs={12} sm={5}>\n                        {/* render result display portal */}\n                        <Paper className={classes.result} elevation={3} >\n                            <ResultPortal />\n                        </Paper>\n                    </Grid>\n                </Grid>\n\n                <div className={classes.fclass}> <span> Feedback & Resources </span> </div>\n\n                <Grid container justify={\"space-between\"} className={classes.feedback} spacing={8}>\n                    <Grid item xs={6}>\n                        <Paper className={classes.feature} elevation={3}>\n                            <h2> About </h2>\n                            <span> This is my (<b> Pawan Kumar </b>) final sem project.\n                                    <b>Babu Banarasi Das university </b>, Lucknow\n                            </span>\n                            <h2> Disclaimer </h2>\n                            <span> Altough model is quite accurate but its result <b> can not be trusted for medical use as for now </b>.</span>\n                            <h2>Contact</h2>\n                            <span> email: pawankumar2399@gmail.com</span> <br />\n                            <span> Mobile: +917706833591 </span>\n                            <div> &nbsp;</div>\n                            <span> This project is hosted on heroku</span>\n\n\n                        </Paper>\n                    </Grid>\n                    <Grid item md={6}>\n                        <Paper className={classes.form} elevation={3}>\n                            <TextField\n                                name=\"email\"\n                                type=\"email\"\n                                variant=\"outlined\"\n                                label=\"Email\"\n                                fullWidth\n                                required\n                                onChange={handleInputChange}\n                            />\n                            &nbsp;\n                            &nbsp;\n                            &nbsp;\n                            <FormLabel component=\"legend\"> Result was ?</FormLabel>\n                            <FormControlLabel\n                                name=\"result\"\n                                value=\"correct\"\n                                control={<Radio color=\"secondary\" checked={fdata.result === \"correct\"} onChange={handleInputChange} />}\n                                label=\"Correct\"\n                                labelPlacement=\"start\"\n                            />\n                            <FormControlLabel\n                                value=\"incorrect\"\n                                name=\"result\"\n                                control={<Radio color=\"secondary\" checked={fdata.result === \"incorrect\"} onChange={handleInputChange} />}\n                                label=\"Incorrect\"\n                                labelPlacement=\"start\"\n                            />\n                            <FormControlLabel\n                                name=\"result\"\n                                value=\"not sure\"\n                                control={<Radio color=\"primary\" checked={fdata.result === \"not sure\"} onChange={handleInputChange} />}\n                                label=\"not sure\"\n                                labelPlacement=\"start\"\n                            />\n\n                            <FormLabel component=\"legend\"> &nbsp; </FormLabel>\n                            <TextField\n                                fullWidth\n                                name=\"review\"\n                                multiline={true}\n                                variant=\"outlined\"\n                                rows={5}\n                                label=\"Any other thing\"\n                            />\n                               &nbsp;\n                               &nbsp;\n                               &nbsp;\n                            <Button variant={\"contained\"} fullWidth color=\"secondary\" onClick={handleSubmit}>\n                                Save my feedback\n                            </Button>\n\n                        </Paper>\n                    </Grid>\n                </Grid>\n                <section id=\"resources\">\n                    <div className={classes.fclass}> <span> References: </span> </div>\n                    <ul>\n                        <li> <b> Source code: </b> <a href=\"https://github.com/bellrd/pneumonia-detection-using-cnn.git\"> https://github.com/bellrd/pneumonia-detection-using-cnn.git</a> </li>\n                        <li> <b> Jupyter Notebook: </b> <a href=\"https://colab.research.google.com/drive/1aopNkpZ27qx5By2WKr2eVxci_QQk0KHw?usp=sharing\" > https://colab.research.google.com/drive/1aopNkpZ27qx5By2WKr2eVxci_QQk0KHw?usp=sharing</a> </li>\n                        <li> <b> Dataset Used: </b> <a href=\"https://www.kaggle.com/paultimothymooney/chest-xray-pneumonia/data\">https://www.kaggle.com/paultimothymooney/chest-xray-pneumonia/data</a> </li>\n                        <li> <b> Project Report: </b> <a href=\"https://github.com/bellrd/pneumonia-detection-using-cnn.git\"> https://github.com/bellrd/pneumonia-detection-using-cnn/report.pdf</a> </li>\n                        <li> <b> Slides: </b> <a href=\"https://github.com/bellrd/pneumonia-detection-using-cnn.git\"> https://github.com/bellrd/pneumonia-detection-using-cnn.git/slide.pdf</a> </li>\n                    </ul>\n                </section>\n            </Container>\n        </React.Fragment>\n    )\n}\n","import { createMuiTheme } from \"@material-ui/core\";\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#663399\",\n\n        },\n        secondary: {\n            main: \"#fb8400\"\n        },\n    },\n    typography: {\n        fontFamily: [\n            '\"Alegreya\"',\n            '\"Alfa Slab One\"',\n            '\"sans-serif\"',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"'\n        ].join(\",\"),\n    }\n\n});\n\nexport default theme","import React from 'react';\nimport HomePage from \"./pages/HomePage\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { GlobalContextProvider } from \"./GlobalContext\"\nimport { ThemeProvider } from \"@material-ui/core/styles\"\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme'\n\nfunction App() {\n  return (\n    <GlobalContextProvider>\n      <CssBaseline />\n      <ThemeProvider theme={theme}>\n        <Router>\n          <div>\n            <Switch>\n              <Route path=\"/\" exact component={HomePage} />\n            </Switch>\n          </div>\n        </Router>\n      </ThemeProvider>\n\n    </GlobalContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}