{"version":3,"sources":["reducer/index.js","GlobalContext.js","components/AppBar/Mobile.jsx","components/AppBar/Desktop.jsx","components/AppBar/index.jsx","components/UploadPortal.jsx","components/ResultPortal.jsx","pages/HomePage.jsx","theme.js","App.js","serviceWorker.js","index.js"],"names":["reducer","state","action","type","initialState","accessToken","localStorage","getItem","isMobile","a","check","navigator","userAgent","vendor","window","opera","test","substr","GlobalContext","React","createContext","GlobalContextProvider","props","useReducer","dispatch","Provider","value","children","useStyles","makeStyles","theme","root","marginTop","spacing","flexGrow","title","marginLeft","fontWeight","fontFamily","navlink","marginRight","textDecoration","textTransform","fontSize","color","MenuAppBar","useContext","classes","className","AppBar","position","elevation","Toolbar","Typography","variant","Button","component","Link","to","Mobile","upload","border","borderRadius","height","paddingLeft","paddingRight","heading","paddingTop","paddingBottom","borderBottom","paper","padding","Container","maxWidth","Grid","container","Hidden","xsDown","item","xs","Paper","main","uploadButton","textAlign","backgroundColor","palette","primary","sampleButton","back","result","secondary","width","CssBaseline","justify","sm","UploadPortal","Box","ResultPortal","createMuiTheme","typography","join","App","ThemeProvider","path","exact","HomePage","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a4bb3fe7.chunk.js","sourcesContent":["let reducer = (state, action) => {\n    switch(action.type) {\n\n        default:\n            return ;\n    }\n}\n\nexport default reducer ;","import React from \"react\";\nimport reducer from \"./reducer\";\n\nconst isMobile = function () {\n    var check = false;\n    (function (a) {\n        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true;\n    })(navigator.userAgent || navigator.vendor || window.opera);\n    return check;\n};\n\nconst initialState = {\n    accessToken: \"Token \" + localStorage.getItem('accessToken'),\n    isMobile: isMobile(),\n};\n\n\nconst GlobalContext = React.createContext({});\n\nconst GlobalContextProvider = props => {\n    const [state, dispatch] = React.useReducer(reducer, initialState);\n    return <GlobalContext.Provider value={{ state, dispatch }}>\n        {props.children}\n    </GlobalContext.Provider>\n}\n\nexport {\n    GlobalContext,\n    GlobalContextProvider\n}\n","import React from \"react\" ;\nexport default (props) => {\n    return <div>\n\n    </div>\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GlobalContext } from \"../../GlobalContext\";\nimport { AppBar, Badge, Box, Button, IconButton, Menu, MenuItem, Toolbar, Typography } from \"@material-ui/core\"\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(2),\n        flexGrow: 1,\n    },\n    title: {\n        marginLeft: theme.spacing(8),\n        flexGrow: 1,\n        fontWeight: \"Normal\",\n        fontFamily: \"Alfa Slab One\"\n    },\n    navlink: {\n        marginRight: theme.spacing(8),\n        textDecoration: \"underline\",\n        fontWeight: \"bolder\",\n        textTransform: \"Capitalize\",\n        fontSize: \"1.3vw\",\n        color: \"#2a3439\"\n    },\n}));\n\nexport default function MenuAppBar(props) {\n    const ctx = React.useContext(GlobalContext);\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position={\"static\"} color={\"inherit\"} elevation={0}>\n                <Toolbar>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        PWNS\n                    </Typography>\n\n                    <Button component={Link} to={\"/cart\"} className={classes.navlink}>\n                        Documentation\n                    </Button>\n                    <Button component={Link} to={\"/cart\"} className={classes.navlink}>\n                        Resources\n                    </Button>\n                    <Button component={Link} to={\"/cart\"} className={classes.navlink}>\n                        Metrics\n                    </Button>\n                    <Button component={Link} to={\"/cart\"} className={classes.navlink}>\n                        About\n                    </Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}","import React, { useContext, useEffect } from \"react\"\nimport { GlobalContext } from \"../../GlobalContext\";\nimport MobileAppBar from \"./Mobile\";\nimport DesktopAppBar from \"./Desktop\";\n\nexport default (props) => {\n\n    const ctx = useContext(GlobalContext);\n\n    return ctx.state.isMobile ? <MobileAppBar /> : <DesktopAppBar />\n}","import React from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    upload: {\n        border: \"6px dashed grey\",\n        borderRadius:\"2px\",\n        height: \"60vh\",\n\n    }\n}))\n\nexport default (props) => {\n    const classes = useStyles();\n    return (\n    <div className={classes.upload}>\n\n    </div>\n    );\n}","import React from \"react\";\nimport { Container, Grid, Hidden, Paper,  makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        paddingLeft:theme.spacing(4),\n        paddingRight:theme.spacing(4)\n    },\n    heading: {\n        paddingTop:theme.spacing(4),\n        paddingBottom:theme.spacing(4),\n        fontSize: \"2rem\",\n        fontFamily: \"Alfa Slab One\",\n        color: \"#fff\",\n        '& span': {\n            borderBottom: \"8px solid red \",\n        }\n    },\n    paper:{\n        padding:theme.spacing(2),\n        height:\"400px\"\n    }\n}))\nexport default (props) => {\n    const classes = useStyles();\n\n    return (\n        <Container maxWidth={\"lg\"} className={classes.root}>\n            <div className={classes.heading}>\n                <span>Result </span>\n            </div>\n            \n            <Grid container spacing={4}>\n                <Hidden xsDown>\n                   <Grid item xs={6}>\n                    </Grid> \n                </Hidden>\n                <Grid item xs={6}>\n                    <Paper className={classes.paper} elevation={0}>\n\n                    </Paper>\n                </Grid>\n            </Grid>\n\n\n        </Container>\n    )\n}","import React from 'react';\nimport AppBar from \"../components/AppBar\"\nimport { Grid, Button, Container, Box,  makeStyles, CssBaseline, Hidden } from '@material-ui/core';\nimport UploadPortal from \"../components/UploadPortal\";\nimport ResultPortal from \"../components/ResultPortal\";\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        marginTop: theme.spacing(8),\n    },\n\n    uploadButton:{\n        marginTop:theme.spacing(2),\n        marginLeft:theme.spacing(2),\n        marginRight:theme.spacing(2),\n        textAlign:\"center\",\n        padding:theme.spacing(2),\n        fontSize:\"1.5rem\",\n        textTransform:\"Uppercase\",\n        backgroundColor:theme.palette.primary.main,\n        borderRadius:\"5px\",\n        color:\"#0f0f0f\",\n        fontFamily:\"Alfa slab One\"\n    },\n    sampleButton: {\n        marginTop: theme.spacing(2),\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        textAlign: \"center\",\n        paddingTop: theme.spacing(2),\n        fontSize: \"1.6vw\",\n        color: \"grey\",\n        fontWeight:\"bold\",\n        borderBottom:\"6px solid grey\"\n    },\n    back: {\n        backgroundColor: \"#fff\"\n    },\n\n    result: {\n        marginTop:theme.spacing(8),\n        backgroundColor:theme.palette.secondary.main,\n        color:\"#fff\",\n        width:\"100vw\"\n    }\n}))\n\nexport default props => {\n    const classes = useStyles();\n    return (\n        <div className={classes.back}>\n            <CssBaseline />\n            <AppBar />\n            <Container className={classes.main}>\n                <Grid container spacing={4} justify=\"space-evenly\">\n                    <Grid item xs={12} sm={6}>\n                        <UploadPortal />\n                    </Grid>\n                    <Hidden xsDown>\n                    <Grid item sm={4}>\n                        <UploadPortal />\n                    </Grid>\n                    </Hidden>\n                </Grid>\n\n                <Grid container spacing={4} justify=\"space-evenly\">\n                    <Grid item xs={6} sm={6}>\n                        <div className={classes.uploadButton}>\n                            upload\n                        </div>\n                    </Grid>\n\n                    <Grid item xs={6} sm={4}>\n                        <div className={classes.sampleButton}>\n                            <b>Or</b> Choose from sample images.\n                        </div>\n                    </Grid>\n                </Grid>\n            </Container>\n\n            <Box className={classes.result}>\n                <ResultPortal/>\n            </Box>\n        </div>\n    )\n}\n","import { createMuiTheme } from \"@material-ui/core\";\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#EBB41E\",\n\n        },\n        secondary: {\n            main: \"#2e2459\"\n        },\n    },\n    typography: {\n        fontFamily: [\n            '\"Fira Sans\"',\n            '\"Alfa Slab One\"',\n            '\"sans-serif\"',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"'\n        ].join(\",\"),\n    }\n\n});\n\nexport default theme","import React from 'react';\nimport HomePage from \"./pages/HomePage\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { GlobalContextProvider } from \"./GlobalContext\"\nimport { ThemeProvider } from \"@material-ui/core/styles\"\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme'\n\nfunction App() {\n  return (\n    <GlobalContextProvider>\n      <CssBaseline />\n      <ThemeProvider theme={theme}>\n        <Router>\n          <div>\n            <Switch>\n              <Route path=\"/\" exact component={HomePage} />\n            </Switch>\n          </div>\n        </Router>\n      </ThemeProvider>\n\n    </GlobalContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}